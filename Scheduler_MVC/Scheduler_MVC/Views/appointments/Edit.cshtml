@using Scheduler_MVC.Models
@model Scheduler_MVC.Models.appointments

@{
    ViewBag.Title = "Reschedule";
    //Layout = "~/Views/Shared/_Layout.cshtml";
}



<h2>Edit Appointment</h2>

<div style="width: 100%;  background-color: lavender; margin: 0 auto;align-content: center" >
    @using (Html.BeginForm(null, null, FormMethod.Post, new { id = "appt_form" }))

    {

        @Html.AntiForgeryToken()
        <h4 align="center">Appointment</h4>
        <div class="form-horizontal" style="margin-left: 30%">
            
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.appt_id, new { id = "appt_id" })
            @Html.HiddenFor(model => model.appt_client_id, new { id = "appt_client_id" })
            @*Adding the hidden fields to send client information along with the form*@
            @Html.HiddenFor(model => model.Client.client_name)
            @Html.HiddenFor(model => model.Client.AmcatDatabaseName)
            @Html.HiddenFor(model => model.appt_zone)
            @Html.HiddenFor(model => model.customer_id)
            @Html.HiddenFor(model => model.appt_cm_id)
            @Html.HiddenFor(model => model.agent_name)
            
            




            <div class="form-group input-group-sm"  >
                @Html.LabelFor(model => model.appt_date_time, "Appointment Date", htmlAttributes: new { @class = "control-label col-md-2",style="white-space: nowrap" , id="datesfield" })
                <div class="col-md-10">


                    @Html.EditorFor(model => model.appt_date_time, new { htmlAttributes = new { @class = "form-control datetimepicker", id="datefield" } })
                    <div id="timeSlots"></div>
                    @*This will be removed just for testing*@
                    @Html.EditorFor(model => model.appt_date_time, new { htmlAttributes = new { @class = "form-control",id = "postid" } })
                    @* @Html.TextBoxFor(model => model.appt_date_time, new { data_format ='dd/MM/yyyy HH:mm:ss PP' });*@



                    @Html.ValidationMessageFor(model => model.appt_date_time, "", htmlAttributes: new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.appt_status, "Appointment Status", htmlAttributes: new { @class = "control-label col-md-2", style = "white-space: nowrap" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.appt_status, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.appt_status, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.appt_type, "Appointment Type", htmlAttributes: new { @class = "control-label col-md-2", style = "white-space: nowrap" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.appt_type, new { htmlAttributes = new { @class = "form-control", id = "appttype" } })
                    @Html.ValidationMessageFor(model => model.appt_type, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group input-group-sm" >
                @Html.Label("Available slots", htmlAttributes: new { @class = "control-label col-md-2",style="white-space: nowrap" })
                <div class="col-md-10">
                    <select id="MyList"></select>
                </div>
            </div>

            <div class="form-group input-group-sm" >
                @Html.Label("Time", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">


                    @Html.DropDownList("hours", Enumerable.Range(0, 24)
                    .Select(i => new SelectListItem
                    {
                        Value = i.ToString(),
                        Text = i.ToString()
                        //Selected = (Model.Hours > 12 ? Model.Hours - 12 : Model.Hours) == i

                    }
                    ),new {style="margin:auto"})&nbsp;
                    @* @Html.TextBoxFor(model => model.appt_date_time, new { data_format ='dd/MM/yyyy HH:mm:ss PP' });*@

                    @Html.DropDownList("minutes", Enumerable.Range(0, 60)
                    .Select(j => new SelectListItem
                    {
                        Value = j.ToString(),
                        Text = j.ToString()

                    }
                    ), new { style = "margin:auto" })
                </div>
            </div>



            <div class="form-group" >
                @Html.LabelFor(model => model.recording_uri, "Recording URI", htmlAttributes: new { @class = "control-label col-md-2", style = "white-space: nowrap" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.recording_uri, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.recording_uri, "", new { @class = "text-danger" })
                </div>
            </div>


            @**** Originally Appointment Status and Appointment Type were below here*@
            @*<div class="form-group" >
                @Html.LabelFor(model => model.appt_status, "Appointment Status", htmlAttributes: new { @class = "control-label col-md-2", style = "white-space: nowrap" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.appt_status, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.appt_status, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group" >
                @Html.LabelFor(model => model.appt_type, "Appointment Type", htmlAttributes: new { @class = "control-label col-md-2", style = "white-space: nowrap" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.appt_type, new { htmlAttributes = new { @class = "form-control", id = "appttype" } })
                    @Html.ValidationMessageFor(model => model.appt_type, "", new { @class = "text-danger" })
                </div>
            </div>*@







            <div class="form-group" >
                @Html.LabelFor(model => model.notes, "Notes", htmlAttributes: new { @class = "control-label col-md-2", style = "white-space: nowrap" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.notes, new { htmlAttributes = new { @class = "form-control", id = "notesfield" } })
                    @Html.ValidationMessageFor(model => model.notes, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group" >
                @Html.LabelFor(model => model.h2, "H2", htmlAttributes: new { @class = "control-label col-md-2", style = "white-space: nowrap" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.h2)
                        @Html.ValidationMessageFor(model => model.h2, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>



            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    @* Changing the id of submit button from subClick to subClick1 to prevent deferred post of the form *@
                    <input type="submit" value="Save" id="subClick" class="btn btn-default" />
                </div>
            </div>
        </div>
    }

    @**@
    <div style="width: 100%;margin-left: 30%">
        @Html.ActionLink("Back to List", "Index")
    </div>
</div>
<div id="div_for_partial" style="width: 20%;float:left"></div>



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")


    <script type="text/javascript" src="~/Scripts/bootstrap.js"></script>
    <link href="~/Content/bootstrap-datetimepicker.css" rel="stylesheet"/>
    <script type="text/javascript" src="~/Scripts/moment.js"></script>
    <script type="text/javascript" src="~/Scripts/bootstrap-datetimepicker.js"></script>
    <script type="text/javascript" src="~/Scripts/bootstrap.min.js"></script>
    <script type="text/javascript" src="~/Scripts/Trie.js"></script>
    <script type="text/javascript" src="~/Scripts/parseJsonObject.js"></script>
    <script typr="tetxt/javascript" src="~/Scripts/jsonToQueryString.js"></script>


    @* <link href="@Url.Content("~/Content/bootstrap.css")" rel="stylesheet" type="text/css"/>
    <link href="@Url.Content("~/Content/bootstrap-datetimepicker.min.css")" rel="stylesheet" type="text/css"/>*@


    <script type="text/javascript" src="~/Scripts/bootstrap-datetimepicker.min.js"></script>
    <script>
        //  $("#datetimepicker").datetimepicker({
        /*          pickDate: true,                 //en/disables the date picker
                    pickTime: true,
                    format: "DD-MM-YYYY",
                    useMinutes: false,               //en/disables the minutes picker
                    useSeconds: false*/
        //});
        /* $("#datetimepicker").on("dp.change", function (e) {
             alert("hey");
            });*/

        /*  jQuery(document).ready(function () {
            jQuery('.datetimepicker').datetimepicker({
                                    //format: 'dd/MM/yyyy hh:mm:ss'
             });
            });*/
        //jQuery('.bootstrap-datetimepicker-widget').datetimepicker();
        console.log("@Model.appt_type");
        console.log("@Model.appt_date_time");
        console.log("@Model.time_stamp");
        console.log("@Model.appt_client_id");
        console.log("@Model.customer_id");
        console.log("@Model.notes");


        function convertTime(time) {
            //console.log(time);
            var hours = Number(time.match(/^(\d+)/)[1]);
            var minutes = Number(time.match(/:(\d+)/)[1]);
            var AMPM = time.match(/\s(.*)$/)[1];
            if (AMPM == "PM" && hours < 12) hours = hours + 12;
            if (AMPM == "AM" && hours == 12) hours = hours - 12;
            var sHours = hours.toString();
            var sMinutes = minutes.toString();
            if (hours < 10) sHours = "0" + sHours;
            if (minutes < 10) sMinutes = "0" + sMinutes;
            return (sHours + ':' + sMinutes + ':' + "00");
        }

        function doSomething(obj,dt){
            //alert("button"+obj);
            //concatenated date and time
            //alert(document.getElementById("datefield").getAttribute("value") + obj.toString());
            //alert(dt+" "+obj);
            var time;
            time= convertTime (obj.toString());
            //alert("Converted DateTime "+dt+" "+time);
            var d = new Date(dt+" "+time);
            //console.log ("Converted date is : " +d);
            document.getElementById("datefield").setAttribute("value",d);
            document.getElementById('datefield').value = d;
            //printing the formatted date here
            //console.log("The formatted date is "+(d.getMonth()+1) +"-"+ d.getDate()+"-"+ d.getFullYear()+ " "+ time);
            //Putting date in yyyy/mm/dd {time}
            var d1 =  d.getFullYear()+"-"+(d.getMonth()+1) +"-"+ d.getDate()+ " "+ time;
            document.getElementById("datefield").setAttribute("value",d1);
            document.getElementById('datefield').value = d1;
        }

        $(function() {
            var dateAsObject;




            jQuery.validator.methods.date = function(value, element) {
                var isChrome = /Chrome/.test(navigator.userAgent) && /Google Inc/.test(navigator.vendor);
                if (isChrome) {
                    var d = new Date();
                    return this.optional(element) || !/Invalid|NaN/.test(new Date(d.toLocaleDateString(value)));
                } else {
                    return this.optional(element) || !/Invalid|NaN/.test(new Date(value));
                }
            };

            jQuery('.bootstrap-datetimepicker-widget').attr({keepOpen:true});
            jQuery('.bootstrap-datetimepicker-widget').datetimepicker('show');
            jQuery('.datetimepicker').datetimepicker({ format: 'MM/DD/YYYY',inline:true,sideBySide:true,keepOpen:true,debug:true});
            //$('div.ui-datetimepicker').css({fontSize : '10px'});
            jQuery('.bootstrap-datetimepicker-widget').css({
                'display':'inline-block',
                'width':'40%'
            });


            jQuery('.datetimepicker').on("dp.update",function(e){
                $('#timeSlots').empty();
            });

            jQuery('.datetimepicker')
                .on("dp.change dp.show dp.hide",
                    function(e) {

                        jQuery('.bootstrap-datetimepicker-widget').css({
                            'display':'inline-block',
                            'width':'40%'
                        });
                        dateAsObject = moment(e.date).format("YYYY-MM-D");
                        //console.log("Todays date with current time is:"+moment(e.date).format("YYYY-MM-DD"));
                        /*console.log("moment format:" +
                        moment(new Date("Mon Jun 27 2016 00:00:00 GMT-0400"))
                        .format("YYYY-MM-DD HH:mm Z"));*/

                        // alert(dateAsObject);
                        //alert(e.date);
                        //alert(e.date.toString().substring(0, 3));
                        var str = e.date.toString().substring(0, 3);
                        var weekDays = ["Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"];
                        var T = new Trie();
                        var i;

                        for (i = 0; i < weekDays.length; i++) {
                            T.insert(weekDays[i]);
                        }
                        var day = T.autoComplete(e.date.toString().substring(0, 3))[0];
                        //console.log(day[0]);
                        //console.log(JSON.stringify({ 'day': day, 'id': @Model.appt_client_id }));


                        $.ajax({
                            url: '@Url.Action("GetTime", "appointments")',

                            type: 'POST',
                            data: JSON.stringify({ 'day': day, 'id': @Model.appt_client_id,'zone': '@Model.appt_zone' }),
                            dataType: 'json',
                            processdata: false,
                            contentType: 'application/json; charset=utf-8',
                            success: function(data) {
                                // alert(JSON.stringify(data));
                                var pObj = new parseObject(JSON.stringify(data), "Text");
                                var lst = pObj.parse();
                                //console.log("parse.obj" + pObj.parse());
                                //alert("another alert" + lst.split(","));

                                //Cascading Buttons code begins
                                /*   $('#timeSlots').empty();
                                   $('#timeSlots').css({'width':'200px','top':'-150px','display':'inline-block','position':'inherit'});
                                   var  dv = document.getElementById('timeSlots');
                                   var btns = ['1','2','3','4','5','6','7','8','9'];
                                   for (var i in btns) {
                                       var btn = document.createElement('button');
                                       var txt = document.createTextNode(String(btns[i]));

                                       btn.appendChild(txt);
                                       btn.setAttribute('type','button');
                                       btn.setAttribute('id',String(btns[i]));
                                       //btn.setAttribute('onclick',doSomething($(this)));
                                       btn.setAttribute('style','float:left;margin-right:10px;');
                                       btn.onclick=function(){
                                           alert(this.id);
                                           doSomething(this.id);
                                       };
                                       alert("Adding button");
                                       dv.appendChild(btn);

                                   }
                                   $('#timeSlots').css({'width':'200px','top':'-150px','display':'inline-block'});*/
                                /*function doSomething(){
                                    alert("button");
                                }*/

                                //Cascading Code ends here s
                                $('#MyList').empty();

                                //Adding the lable as a child to the div
                                $('#timeSlots').empty();
                                $('#timeSlots').css({'width':'300px','top':'-120px','display':'inline-block','position':'relative'});
                                var  dv = document.getElementById('timeSlots');
                                var inp = document.createElement('label');
                                var inpTxt = document.createTextNode("Select time slots");
                                inp.appendChild(inpTxt);
                                inp.setAttribute('style','width:300px;text-align:center;float:left;display:inline-block;');
                                dv.appendChild(inp);
                                //Code for adding the lable ends

                                //Iteration begins for the time slots

                                $.each(lst.split(','),
                                    function(index) {
                                        //console.log("this.id" + lst.split(',')[index]);
                                        //console.log("this.Name" + lst.split(',')[index]);
                                        //console.log(this.text);

                                        //CASCADING TIME BUTTONS CODE BEGINS

                                        var btn = document.createElement('button');
                                        var txt = document.createTextNode(String(lst.split(',')[index]));

                                        btn.appendChild(txt);
                                        btn.setAttribute('type','button');
                                        btn.setAttribute('id',String(lst.split(',')[index]));
                                        //btn.setAttribute('onclick',doSomething($(this)));
                                        btn.setAttribute('style','float:left;margin-right:10px;width:80px;');
                                        btn.onclick=function(){
                                            //alert(this.id);
                                            //sending the date and the time picked ot the function for concatenation
                                            console.log("Selected date before doSomething is "+moment(e.date).format("YYYY-MM-DD"));
                                            doSomething(this.id,moment(e.date).format("YYYY-MM-DD"));
                                        };
                                        //alert("Adding button");
                                        dv.appendChild(btn);
                                        //CASCADING TIME BUTTONS CODE ENDS

                                        $('#MyList')
                                            .append($('<option/>')
                                                .attr('value', lst.split(',')[index])
                                                .text(lst.split(',')[index]));
                                    });
                                //alert(lst.split(','));
                                //alert("success");

                            },
                            error: function(xhr, ajaxOptions, thrownError) {
                                alert("error");
                            },
                            complete: function(x, y) {
                               // alert("complete");
                            }
                        });
                        // alert(T.autoComplete(e.date.toString().substring(0, 3)));
                    });



            $('#MyList')
                .on('change',
                    function() {

                        //alert("time value" + $("#MyList").val() + "date value" + dateAsObject);
                        var form = $('#appt_form');
                        var model = @Html.Raw(Json.Encode(Model));
                        //console.log("form json data");
                        //console.log("model after encoding" + JSON.stringify(model));
                        model = {
                            "appt_client_id": 512,
                            "customer_id": 152879,
                            "appt_id": 303381612,
                            // "appt_date_time": "/Date(1465396200000)/",
                            "appt_date_time": "2016-06-16 14:00:00",
                            "recording_uri": "test",
                            //"time_stamp": "/Date(1465922311181)/",
                            "time_stamp": "2016-06-14 12:44:00",
                            "appt_status": "NEW                 ",
                            "appt_type": "HV   ",
                            "appt_cm_id": null,
                            "appt_zone": "Zone12",
                            "agent_name": "bbeckley       ",
                            "notes": "json notes",
                            "h2": false,
                            "old_appt_id": null,
                            "released": null,
                            "appt_result": null,
                            "appt_result_datetime": null,
                            "appt_update_status_date": null,
                            "OldCustomerID": null
                        };
                        var response = jQuery.parseJSON(JSON.stringify(model));
                        //console.log("date value " + jQuery('.datetimepicker').data("datetimepicker").getDate());
                        //console.log("response" + response);
                        //console.log(model);
                        //console.log(JSON.stringify(model));
                        //console.log("just beofre ajax call");
                        $.ajax({
                            url: '@Url.Action("EditJson", "appointments")',
                            type: 'POST',
                            cache:false,
                            data: JSON.stringify(model),
                            contentType: 'application/json;charset=utf-8',
                            success: function(data) {
                                document.getElementById('appt_client_id').value = JSON
                                   .parse(JSON.stringify(data))["appt_client_id"];
                                document.getElementById('notesfield').value = JSON
                                    .parse(JSON.stringify(data))["notes"];
                                document.getElementById('appttype').value = JSON
                                   .parse(JSON.stringify(data))["appt_type"];
                                //document.getElementById('postid').value = JSON.parse(JSON.stringify(data))["customer_id"];

                                //console.log(JSON.parse(JSON.stringify(data))["customer_id"]);
                                // console.log(JSON.stringify(data));

                                //console.log("@*@Model.appt_type*@");
                                //console.log("@*@Model.appt_date_time*@");
                                //console.log("@*@Model.time_stamp*@");
                                //console.log("@*@Model.appt_client_id*@");
                                //console.log("@*@Model.customer_id*@");
                                //console.log("@*@Model.notes*@");
                                //alert("success in MyList");
                            },
                            error: function(xhr, ajaxOptions, thrownError) {
                                var err = eval("(" + xhr.responseText + ")");
                                //console.log(err);
                                //alert("errorin MyList");
                            },
                            complete: function(x, y) {
                                //alert("complete in MyList");
                            }
                        });
                    });


            //alert("hey");

            //**** Bypassing normal form post by deffered post through ajax. Controller method used here is Details3
            //**** To execute this section just give the id for submit button as subClick

            $('#subClick').click(function(e) {
                //alert("in the submit ajax");
                console.log("data for formcollection" + $("#appt_form").serialize());
                console.log(JSON.stringify($("#appt_form").serializeArray()));
                console.log($("#appt_form").serializeArray());
                //we want it to get submitted
                e.preventDefault();
                //*****Details2 handles the partialView() so included that.Now changing it to render the View() for confirm.
                //******Also  $("#div_for_partial").html(data); in success works with var url = Url.Action("Details2","appointments");
                @*var url = '@Url.Action("Details2","appointments")'; *@
                                // the script where you handle the form input.
                                var url = '@Url.Action("Details3","appointments")';

                                $.ajax({
                                    type: 'POST',
                                    url: url,
                                    data:$("#appt_form").serialize(),
                                    //****the lines below do not need to go when sending the form collection data
                                    //data: JSON.stringify($("#appt_form").serializeArray()),
                                    //contentType: 'application/json;charset=utf-8',// serializes the form's elements.
                                    success: function(data) {
                                        //**** Line below is for rendering the partial view on the same view
                                        //$("#div_for_partial").html(data);
                                        /*console.log(" After the call to Details3 \n");
                                        console.log("stringify any data "+JSON.stringify(data));
                                        console.log(data);
                                        console.log(data["val"]);*/
                                        //***Three Lines below works with sending dictionary value in Details 3
                                        //console.log("parsed"+JSON.parse(data).val);
                                        //console.log("stringify disctionary"+JSON.stringify(JSON.parse(data))["val"]);

                                        //document.getElementById('appttype').value =JSON.parse(data).val;
                                        //alert(JSON.stringify(data)); // show response from the php script.
                                        //window.location = "/appointments/Confirm/"+jsonToQueryString(JSON.stringify(data));
                                        $("#appt_form")[0].submit();
                                    },
                                    error: function(xhr, ajaxOptions, thrownError) {
                                        var err = eval("(" + xhr.responseText + ")");
                                        console.log(err);
                                        alert("error in Details3");
                                    }

                                });
                               // alert("ajax completed");
                                // avoid to execute the actual submit of the form.
                            });

                    });
    </script>



}
